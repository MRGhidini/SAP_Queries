CREATE VIEW GA_Contasareceberpendentes
with encryption

as




SELECT MAX(T0.[ShortName]) 'Código Cliente', 
MAX(T4.CardName) 'Nome Cliente',
ISNULL((CASE max(T0.TransType)
	WHEN 30 THEN 'LCM'
	WHEN 13 THEN 'NF de Saida'
	WHEN 14 THEN 'Dev. NF de Saida'
	WHEN 15 THEN 'Entrega'
	WHEN 16 THEN 'Devolução'
	WHEN 18 THEN 'NF de Entrada'
	WHEN 19 THEN 'Dev. NF de Entrada'
	WHEN 20 THEN 'Recebimento de Mercadoria'
	WHEN 21 THEN 'Devolução de Mercadoria'
	WHEN 69 THEN 'Despesas de Importação'
	WHEN 60 THEN 'Saída de Mercadoria'
	WHEN 59 THEN 'Entrada de Mercadoria'
	WHEN 46 THEN 'Contas a Pagar' 
	WHEN 24 THEN 'Contas a Receber'
	WHEN 162 THEN 'Reavaliação de Estoque'
	WHEN 67 THEN 'Transferencia de Estoque'
	WHEN 203 THEN 'Adiantamento a Cliente'
	WHEN 204 THEN 'Adiantamento a Fornecedor'
	END),'') 'Tipo Doc', 
MAX(T0.[BaseRef]) 'No. Doc SAP', 
MAX(T0.[LineMemo]) 'Observações / No. NF', 
MAX(T0.[SourceLine]) 'No. da Prestação', 
MAX(T0.[RefDate]) 'Data de Lançamento', 
MAX(T0.[TaxDate]) 'Data do Documento', 
MAX(T0.[DueDate]) 'Data de Vencimento', 
-(MAX(T0.[BalDueCred]) + SUM(T1.[ReconSum])) 'Saldo',
MAX(T0.[Account]) 'Conta', 
LTRIM(STR(T0.[TransId])) 'LCM', 
T0.[Line_ID] 'No. da Linha LCM'

FROM  [dbo].[JDT1] T0  INNER  JOIN [dbo].[ITR1] T1  ON  T1.[TransId] = T0.[TransId]  AND  T1.[TransRowId] = T0.[Line_ID]   INNER  JOIN [dbo].[OITR] T2  ON  T2.[ReconNum] = T1.[ReconNum]   INNER  JOIN [dbo].[OJDT] T3  ON  T3.[TransId] = T0.[TransId]   INNER  JOIN [dbo].[OCRD] T4  ON  T4.[CardCode] = T0.[ShortName]    LEFT OUTER  JOIN [dbo].[B1_JournalTransSourceView] T5  ON  T5.[ObjType] = T0.[TransType]  AND  T5.[DocEntry] = T0.[CreatedBy]  AND  (T5.[TransType] <> 'I'  OR  (T5.[TransType] = 'I'  AND  T5.[InstlmntID] = T0.[SourceLine] ))  

WHERE T4.[CardType] = 'C'  AND  
T2.[ReconDate] > GETDATE()  AND  
T1.[IsCredit] = 'C'   
GROUP BY T0.[TransId], T0.[Line_ID] HAVING MAX(T0.[BalFcCred]) <>- SUM(T1.[ReconSumFC])  OR  MAX(T0.[BalDueCred]) <>- SUM(T1.[ReconSum])   

UNION ALL 

SELECT MAX(T0.[ShortName]), 
MAX(T4.CardName),
ISNULL((CASE max(T0.TransType)
	WHEN 30 THEN 'LCM'
	WHEN 13 THEN 'NF de Saida'
	WHEN 14 THEN 'Dev. NF de Saida'
	WHEN 15 THEN 'Entrega'
	WHEN 16 THEN 'Devolução'
	WHEN 18 THEN 'NF de Entrada'
	WHEN 19 THEN 'Dev. NF de Entrada'
	WHEN 20 THEN 'Recebimento de Mercadoria'
	WHEN 21 THEN 'Devolução de Mercadoria'
	WHEN 69 THEN 'Despesas de Importação'
	WHEN 60 THEN 'Saída de Mercadoria'
	WHEN 59 THEN 'Entrada de Mercadoria'
	WHEN 46 THEN 'Contas a Pagar' 
	WHEN 24 THEN 'Contas a Receber'
	WHEN 162 THEN 'Reavaliação de Estoque'
	WHEN 67 THEN 'Transferencia de Estoque'
	WHEN 203 THEN 'Adiantamento a Cliente'
	WHEN 204 THEN 'Adiantamento a Fornecedor'
	END),''), 
MAX(T0.[BaseRef]), 
MAX(T0.[LineMemo]), 
MAX(T0.[SourceLine]), 
MAX(T0.[RefDate]), 
MAX(T0.[TaxDate]), 
MAX(T0.[DueDate]),  
-(- MAX(T0.[BalDueDeb]) - SUM(T1.[ReconSum])),  
MAX(T0.[Account]),
ltrim(str(T0.[TransId])), 
T0.[Line_ID]

FROM  [dbo].[JDT1] T0  INNER  JOIN [dbo].[ITR1] T1  ON  T1.[TransId] = T0.[TransId]  AND  T1.[TransRowId] = T0.[Line_ID]   INNER  JOIN [dbo].[OITR] T2  ON  T2.[ReconNum] = T1.[ReconNum]   INNER  JOIN [dbo].[OJDT] T3  ON  T3.[TransId] = T0.[TransId]   INNER  JOIN [dbo].[OCRD] T4  ON  T4.[CardCode] = T0.[ShortName]    LEFT OUTER  JOIN [dbo].[B1_JournalTransSourceView] T5  ON  T5.[ObjType] = T0.[TransType]  AND  T5.[DocEntry] = T0.[CreatedBy]  AND  (T5.[TransType] <> 'I'  OR  (T5.[TransType] = 'I'  AND  T5.[InstlmntID] = T0.[SourceLine] ))  

WHERE T4.[CardType] = 'C'  AND  
T2.[ReconDate] > GETDATE()  AND  
T1.[IsCredit] = 'D'   

GROUP BY T0.[TransId], T0.[Line_ID] HAVING MAX(T0.[BalFcDeb]) <>- SUM(T1.[ReconSumFC])  OR  MAX(T0.[BalDueDeb]) <>- SUM(T1.[ReconSum])   

UNION ALL 

SELECT MAX(T0.[ShortName]), 
MAX(T2.CardName),
ISNULL((CASE max(T0.TransType)
	WHEN 30 THEN 'LCM'
	WHEN 13 THEN 'NF de Saida'
	WHEN 14 THEN 'Dev. NF de Saida'
	WHEN 15 THEN 'Entrega'
	WHEN 16 THEN 'Devolução'
	WHEN 18 THEN 'NF de Entrada'
	WHEN 19 THEN 'Dev. NF de Entrada'
	WHEN 20 THEN 'Recebimento de Mercadoria'
	WHEN 21 THEN 'Devolução de Mercadoria'
	WHEN 69 THEN 'Despesas de Importação'
	WHEN 60 THEN 'Saída de Mercadoria'
	WHEN 59 THEN 'Entrada de Mercadoria'
	WHEN 46 THEN 'Contas a Pagar' 
	WHEN 24 THEN 'Contas a Receber'
	WHEN 162 THEN 'Reavaliação de Estoque'
	WHEN 67 THEN 'Transferencia de Estoque'
	WHEN 203 THEN 'Adiantamento a Cliente'
	WHEN 204 THEN 'Adiantamento a Fornecedor'
	END),''), 
MAX(T0.[BaseRef]), 
MAX(T0.[LineMemo]), 
MAX(T0.[SourceLine]), 
MAX(T0.[RefDate]), 
MAX(T0.[TaxDate]), 
MAX(T0.[DueDate]),  
-(MAX(T0.[BalDueCred]) - MAX(T0.[BalDueDeb])),  
MAX(T0.[Account]),
ltrim(str(T0.[TransId])), 
T0.[Line_ID]

FROM  [dbo].[JDT1] T0  INNER  JOIN [dbo].[OJDT] T1  ON  T1.[TransId] = T0.[TransId]   INNER  JOIN [dbo].[OCRD] T2  ON  T2.[CardCode] = T0.[ShortName]    LEFT OUTER  JOIN [dbo].[B1_JournalTransSourceView] T3  ON  T3.[ObjType] = T0.[TransType]  AND  T3.[DocEntry] = T0.[CreatedBy]  AND  (T3.[TransType] <> 'I'  OR  (T3.[TransType] = 'I'  AND  T3.[InstlmntID] = T0.[SourceLine] ))  

WHERE T2.[CardType] = 'C'  AND  
(T0.[BalDueCred] <> T0.[BalDueDeb]  OR  T0.[BalFcCred] <> T0.[BalFcDeb] ) AND   
NOT EXISTS (SELECT U0.[TransId], U0.[TransRowId] FROM  [dbo].[ITR1] U0  INNER  JOIN [dbo].[OITR] U1  ON  U1.[ReconNum] = U0.[ReconNum]   WHERE T0.[TransId] = U0.[TransId]  AND  T0.[Line_ID] = U0.[TransRowId]  AND  U1.[ReconDate] > GETDATE() GROUP BY U0.[TransId], U0.[TransRowId])   

GROUP BY T0.[TransId], T0.[Line_ID]